{
	"info": {
		"_postman_id": "8e9262c6-247b-4d13-a1fa-c7550b91b250",
		"name": "Customers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11087769"
	},
	"item": [
		{
			"name": "New bad params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns expected error message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.equal('Incorrect parameters')\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "first_name",
							"value": "{{FIRST_NAME}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "last_name",
							"value": "{{LAST_NAME}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "phone_no",
							"value": "30864729",
							"type": "text",
							"disabled": true
						},
						{
							"key": "address",
							"value": "Tværgyden 36, 9270 Klarup",
							"type": "text",
							"disabled": true
						},
						{
							"key": "onboarding_date",
							"value": "20240806",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{BASE_URL}}/customers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "New",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 Created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const customerID = pm.response.json()['Customer ID'];\r",
							"pm.environment.set('CUSTOMER_ID', customerID)\r",
							"\r",
							"pm.test(\"Returned customer ID is a number\", function () {\r",
							"    pm.expect(customerID).to.be.a('number');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "first_name",
							"value": "{{FIRST_NAME}}",
							"type": "text"
						},
						{
							"key": "last_name",
							"value": "{{LAST_NAME}}",
							"type": "text"
						},
						{
							"key": "phone_no",
							"value": "30864729",
							"type": "text"
						},
						{
							"key": "address",
							"value": "Tværgyden 36, 9270 Klarup",
							"type": "text"
						},
						{
							"key": "onboarding_date",
							"value": "20240806",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{BASE_URL}}/customers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "All",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"All fields have correct types\", function() {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    jsonData.forEach((item, index) => {\r",
							"        pm.expect(item).to.have.property(\"Customer ID\").that.is.a(\"number\");\r",
							"        pm.expect(item).to.have.property(\"First Name\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Last Name\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Phone No\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Address\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Onboarding Date\").that.is.a(\"string\");\r",
							"\r",
							"        if (item[\"Phone No\"].length > 0) {\r",
							"            pm.expect(item[\"Phone No\"]).to.match(/^\\d{8}$/);\r",
							"        }\r",
							"        pm.expect(item[\"Onboarding Date\"]).to.match(/^\\d{8}$/);\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "One",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Gets correct customer ID\", function () {\r",
							"    pm.expect(jsonData['Customer ID']).to.eql(pm.environment.get('CUSTOMER_ID'));\r",
							"});\r",
							"\r",
							"pm.test(\"All fields have correct types\", function() {\r",
							"    pm.expect(jsonData).to.have.property(\"First Name\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"Last Name\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"Phone No\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"Address\").that.is.a(\"string\");\r",
							"    pm.expect(jsonData).to.have.property(\"Onboarding Date\").that.is.a(\"string\");\r",
							"\r",
							"    if (jsonData[\"Phone No\"].length > 0) {\r",
							"        pm.expect(jsonData[\"Phone No\"]).to.match(/^\\d{8}$/);\r",
							"    }\r",
							"    pm.expect(jsonData[\"Onboarding Date\"]).to.match(/^\\d{8}$/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"All fields have correct types and first_name includes search criterion\", function() {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    jsonData.forEach((item, index) => {\r",
							"        pm.expect(item).to.have.property(\"Customer ID\").that.is.a(\"number\");\r",
							"        pm.expect(item).to.have.property(\"First Name\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Last Name\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Phone No\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Address\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"Onboarding Date\").that.is.a(\"string\");\r",
							"\r",
							"        if (item[\"Phone No\"].length > 0) {\r",
							"            pm.expect(item[\"Phone No\"]).to.match(/^\\d{8}$/);\r",
							"        }\r",
							"        pm.expect(item[\"Onboarding Date\"]).to.match(/^\\d{8}$/);\r",
							"\r",
							"        pm.expect(item[\"First Name\"]).to.include(pm.environment.get('SEARCH_TERM'));\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers?s={{SEARCH_TERM}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers"
					],
					"query": [
						{
							"key": "s",
							"value": "{{SEARCH_TERM}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update bad params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 Bad request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns expected error message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.equal('Incorrect parameters')\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "first_name",
							"value": "{{UPDATED_FIRST_NAME}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "last_name",
							"value": "{{LAST_NAME}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "phone_no",
							"value": "30864729",
							"type": "text",
							"disabled": true
						},
						{
							"key": "address",
							"value": "Tværgyden 36, 9270 Klarup",
							"type": "text",
							"disabled": true
						},
						{
							"key": "onboarding_date",
							"value": "20240806",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns a message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[\"message\"]).to.be.a('string');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "first_name",
							"value": "{{UPDATED_FIRST_NAME}}",
							"type": "text"
						},
						{
							"key": "last_name",
							"value": "{{LAST_NAME}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "phone_no",
							"value": "30864729",
							"type": "text",
							"disabled": true
						},
						{
							"key": "address",
							"value": "Tværgyden 36, 9270 Klarup",
							"type": "text",
							"disabled": true
						},
						{
							"key": "onboarding_date",
							"value": "20240806",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "One Updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"First Name correctly updated\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['First Name']).to.eql(pm.environment.get('UPDATED_FIRST_NAME'));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns a message\", function () {\r",
							"    const message = pm.response.json().message;\r",
							"    pm.expect(message).to.be.a('string');\r",
							"    pm.expect(message).to.include('successfully deleted');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove bad params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 Not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns expected error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.be.a('string')\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "One Nonexistent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns expected error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.be.a('string')\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers/{{CUSTOMER_ID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers",
						"{{CUSTOMER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "All",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/customers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Content-Type is JSON\", function () {\r",
					"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
					"});\r",
					"\r",
					"pm.test(\"Response time is less than 200ms\", function () {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
					"});"
				]
			}
		}
	]
}
